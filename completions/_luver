#compdef luver

__luver_caching_policy() {
  local -a oldp
  oldp=( "${1}"(Nmh+12) ) # 12 hours
  (( ${#oldp} ))
}

__luver_arguments() {
  local cache_policy expl
  integer ret=1

  case "${words[1]}" in
    alias)
      if [[ -z "${words[2]}" ]]; then
        typeset -a versions
        versions=("${LUVER_DIR}/lua-versions"/*(N:t))

        _alternative \
          'versions:versions:compadd -a - versions' \
         && ret=0
      else
        ret=0
      fi
      ;;

    completion)
        typeset -a shells
        shells=("zsh")

        _alternative \
          'shells:shells:compadd -a - shells' \
         && ret=0
      ;;
    current)
      _message "Hit enter to get the current Lua version" && ret=0
      ;;

    help)
      _message "Hit enter to get usage information" && ret=0
      ;;

    install)
      zstyle -s ":completion:${curcontext}:" cache-policy cache_policy
      if [[ -z "${cache_policy}" ]]; then
        zstyle ":completion:${curcontext}:" cache-policy __luver_caching_policy
      fi

      local -a list
      local cachename="_luver_lua_versions"
      if ( [[ ${(P)+cachename} -eq 0 ]] || _cache_invalid ${cachename#_}) \
        && ! _retrieve_cache ${cachename#_}; then
          list=( $(luver list-remote) )
          _store_cache ${cachename#_} list
      fi
      _wanted list expl 'available versions' compadd -a list
      ;;

    list)
      _message "Hit enter to list all installed Lua versions" && ret=0
      ;;

    list-remote)
      _message "Hit enter to list all remote Lua versions" && ret=0
      ;;

    unalias)
      local -a aliases
      aliases=("${LUVER_DIR}/aliases"/*(N:t))

      _alternative \
        'aliases:aliases:compadd -a - aliases' \
        && ret=0
      ;;

    uninstall)
      local -a versions
      versions=("${LUVER_DIR}/lua-versions"/*(N:t))

      _alternative \
        'versions:versions:compadd -a - versions' \
        && ret=0
      ;;

    use)
      local -a aliases
      aliases=("${LUVER_DIR}/aliases"/*(N:t))

      local -a versions
      versions=("${LUVER_DIR}/lua-versions"/*(N:t))

      _alternative \
        'aliases:aliases:compadd -a - aliases' \
        'versions:versions:compadd -a - versions' \
        && ret=0
      ;;
  esac

  return ret
}

__luver_commands() {
  local -a _luver_commands=(
    alias:'Alias a version to a common name'
    completion:'Generate shell completion code'
    current:'Print the current Lua version'
    help:'Print usage information'
    install:'Install a new Lua version'
    list:'List all locally installed Lua versions'
    list-remote:'List all remote Lua versions'
    unalias:'Remove an alias definition'
    uninstall:'Uninstall a Lua version'
    use:'Change Lua version'
  )

  _describe -t luver-commands "luver command" _luver_commands
}

_luver() {
  setopt localoptions typesetsilent

  local context curcontext="$curcontext" state state_descr line
  local -A opt_args
  integer ret=1

  _arguments -C \
    '1: :->command'\
    '*:: :->argument' \
    && ret=0

  case "${state}" in
    command)
      __luver_commands && ret=0
      ;;
    argument)
      curcontext="${curcontext%:*}:${words[1]}:"
      __luver_arguments && ret=0
      ;;
  esac

  return ret
}

_luver $@
