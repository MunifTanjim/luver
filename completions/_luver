#compdef luver

setopt localoptions typesetsilent

local curcontext="${curcontext}" state state_descr line expl
local ret=1

typeset -a commands
commands=(
  alias:'Alias a version to a common name'
  completion:'Generate shell completion code'
  current:'Print the current Lua version'
  help:'Print usage information'
  install:'Install a new Lua version'
  list:'List all locally installed Lua versions'
  list-remote:'List all remote Lua versions'
  unalias:'Remove an alias definition'
  uninstall:'Uninstall a Lua version'
  use:'Change Lua version'
)

_arguments -C \
  '1: :->command'\
  '*: :->argument' \
  && ret=0

__luver_caching_policy() {
  local -a oldp=( "${1}"(Nmh+12) ) # 12 hours
  (( ${#oldp} ))
}

case "${state}" in
  command)
    _describe -t commands "luver command" commands && ret=0
    ;;

  argument)
    local cmd=${words[2]}
    curcontext="${curcontext%:*:*}:luver-command-${cmd}"

    case "${cmd}" in
      alias)
        if [[ -z "${words[3]}" ]]; then
          typeset -a versions
          versions=("${LUVER_DIR}/lua-versions"/*(N:t))

          _alternative \
            'versions:versions:compadd -a - versions' \
           && ret=0
        else
          ret=0
        fi
        ;;

      completion)
          typeset -a shells
          shells=("zsh")

          _alternative \
            'shells:shells:compadd -a - shells' \
           && ret=0
        ;;
      current)
        _message "Hit enter to get the current Lua version" && ret=0
        ;;

      help)
        _message "Hit enter to get usage information" && ret=0
        ;;

      install)
        local cache_policy
        zstyle -s ":completion:${curcontext}:" cache-policy cache_policy
        if [[ -z "$cache_policy" ]]; then
            zstyle ":completion:${curcontext}:" cache-policy __luver_caching_policy
        fi

        local -a list
        local cachename="_luver_lua_versions"
        if ( [[ ${(P)+cachename} -eq 0 ]] || _cache_invalid ${cachename#_}) \
          && ! _retrieve_cache ${cachename#_}; then
            list=( $(luver list-remote) )
            _store_cache ${cachename#_} list
        fi
        _wanted list expl 'available versions' compadd -a list
        ;;

      list)
        _message "Hit enter to list all installed Lua versions" && ret=0
        ;;

      list-remote)
        _message "Hit enter to list all remote Lua versions" && ret=0
        ;;

      unalias)
        typeset -a aliases
        aliases=("${LUVER_DIR}/aliases"/*(N:t))

        _alternative \
          'aliases:aliases:compadd -a - aliases' \
          && ret=0
        ;;

      uninstall)
        typeset -a versions
        versions=("${LUVER_DIR}/lua-versions"/*(N:t))

        _alternative \
          'versions:versions:compadd -a - versions' \
          && ret=0
        ;;

      use)
        typeset -a aliases
        aliases=("${LUVER_DIR}/aliases"/*(N:t))

        typeset -a versions
        versions=("${LUVER_DIR}/lua-versions"/*(N:t))

        _alternative \
          'aliases:aliases:compadd -a - aliases' \
          'versions:versions:compadd -a - versions' \
          && ret=0
        ;;
    esac
esac

return ${ret}
